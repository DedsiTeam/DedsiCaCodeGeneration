using {{projectname}}.Repositories.{{domainname}}s;
using Dedsi.Ddd.CQRS.CommandHandlers;
using Dedsi.Ddd.CQRS.Commands;

namespace {{projectname}}.{{domainname}}s.CommandHandlers;

public record Delete{{domainname}}Command(Guid Id): DedsiCommand<bool>;

public class Delete{{domainname}}CommandValidator : AbstractValidator<Delete{{domainname}}Command()>
{
    public Delete{{domainname}}CommandValidator()
    {

    }
}

public class Delete{{domainname}}CommandHandler(I{{domainname}}Repository {{domainname}}Repository): DedsiCommandHandler<Delete{{domainname}}Command, bool>
{
    public override async Task<bool> Handle(Delete{{domainname}}Command command, CancellationToken cancellationToken)
    {
        await {{domainname}}Repository.DeleteAsync(a => a.Id == command.Id, false, cancellationToken);
        
        return true;
    }
}