using {{projectname}}.{{domainname}}.Dtos;
using {{projectname}}.EntityFrameworkCore;
using Dedsi.Ddd.Domain.Queries;
using Dedsi.EntityFrameworkCore.Queries;
using Microsoft.EntityFrameworkCore;
using Volo.Abp.EntityFrameworkCore;

namespace {{projectname}}.{{domainname}}.Queries;

public interface I{{domainname}}Query : IDedsiQuery
{
    Task<{{domainname}}Dto> GetAsync(Guid id, CancellationToken cancellationToken);

    Task<{{domainname}}PagedResultDto> {{domainname}}PagedAsync({{domainname}}PagedInputDto input, CancellationToken cancellationToken);
}

public class {{domainname}}Query(IDbContextProvider<{{projectname}}DbContext> dbContextProvider)
    : DedsiEfCoreQuery<{{projectname}}DbContext>(dbContextProvider),
        I{{domainname}}Query
{
    /// <inheritdoc />
    public async Task<{{domainname}}PagedResultDto> {{domainname}}PagedAsync({{domainname}}PagedInputDto input, CancellationToken cancellationToken)
    {
        var dbContext = await GetDbContextAsync();
    }
    
    /// <inheritdoc />
    public async Task<{{domainname}}Dto> GetAsync(Guid id, CancellationToken cancellationToken)
    {
        var dbContext = await GetDbContextAsync();
    }
}